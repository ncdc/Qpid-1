<schema package="org.apache.qpid.ha">

  <!--
      Licensed to the Apache Software Foundation (ASF) under one
      or more contributor license agreements.  See the NOTICE file
      distributed with this work for additional information
      regarding copyright ownership.  The ASF licenses this file
      to you under the Apache License, Version 2.0 (the
      "License"); you may not use this file except in compliance
      with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing,
      software distributed under the License is distributed on an
      "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
      KIND, either express or implied.  See the License for the
      specific language governing permissions and limitations
      under the License.
  -->

  <!-- Monitor and control HA status of a broker. -->
  <class name="HaBroker">
    <property name="name"   type="sstr" access="RC" index="y" desc="Primary Key"/>

    <property name="status" type="sstr" desc="HA status: primary or backup"/>

    <property name="brokers" type="sstr"
	      desc="Multiple-address URL used by HA brokers to connect to each other."/>

    <property name="publicBrokers" type="sstr"
	      desc="Multiple-address URL used by clients to connect to the HA brokers."/>

    <property name="expectedBackups" type="uint16"
	      desc="Number of HA backup brokers expected."/>>

    <method name="promote" desc="Promote a backup broker to primary."/>

    <method name="setBrokers" desc="Set URL for HA brokers to connect to each other.">
      <arg name="url" type="sstr" dir="I"/>
    </method>

    <method name="setPublicBrokers" desc="Set URL for clients to connect to  HA brokers">
      <arg name="url" type="sstr" dir="I"/>
    </method>

    <method name="setExpectedBackups" desc="Set number of backups expected">
      <arg name="expectedBackups" type="uint16" dir="I"/>
    </method>

    <method name="replicate" desc="Replicate from a remote queue to the local broker.">
      <arg name="broker" type="sstr" dir="I"/>
      <arg name="queue" type="sstr" dir="I"/>
    </method>
  </class>

</schema>
