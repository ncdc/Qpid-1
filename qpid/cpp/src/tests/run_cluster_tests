#!/bin/bash

#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Check that top_builddir and srcdir are set
# If not, assume local run from test dir
if [ -z ${top_builddir} -o -z ${srcdir} ]; then
	srcdir=`pwd`
	top_builddir=${srcdir}/../../
fi
TEST_DIR=${top_builddir}/src/tests
PYTHON_DIR=${srcdir}/../../../python

if test -z $1; then
	CLUSTER_TEST="${PYTHON_DIR}/qpid-python-test -m cluster_tests cluster_tests.ShortTests.\*"
else
	CLUSTER_TEST="${PYTHON_DIR}/qpid-python-test -m cluster_tests cluster_tests.LongTests.\*"
	echo "Running $1..."
fi


# Check AIS requirements
id -nG | grep '\<ais\>' > /dev/null || NOGROUP="You are not a member of the ais group."
ps -u root | grep 'aisexec\|corosync' > /dev/null || NOAISEXEC="The aisexec or corosync daemon is not running as root."
if ! test -d ${PYTHON_DIR}; then
	NO_PYTHON_DIR="PYTHON_DIR=\"${PYTHON_DIR}\" not found or does not exist."
fi

if test -n "${NOGROUP}" -o -n "${NOAISEXEC}" -o -n "${NO_PYTHON_DIR}"; then
    cat <<EOF

    ======== WARNING: PYTHON CLUSTER TESTS DISABLED ===========

    Tests that depend on the openais library (used for clustering)
    and python will not be run because:

    ${NOGROUP}
    ${NOAISEXEC}
    ${NO_PYTHON_DIR}

    ===========================================================

EOF
	exit 0
fi


# Check XML exchange requirements
XML_LIB=$srcdir/../.libs/xml.so
if [ -f ${XML_LIB} ]; then
	export XML_LIB
fi


# Set up environment for python tests
export PYTHONPATH=${srcdir}:${PYTHON_DIR}
export QPIDD_EXEC=${top_builddir}/src/qpidd
export CLUSTER_LIB=${top_builddir}/src/.libs/cluster.so
export QPID_CONFIG_EXEC=${srcdir}/../../../python/commands/qpid-config
export QPID_ROUTE_EXEC=${srcdir}/../../../python/commands/qpid-route
export RECEIVER_EXEC=${top_builddir}/src/tests/receiver
export SENDER_EXEC=${top_builddir}/src/tests/sender


# Check for existence of qpid tools (either in svn tree or full install)
# This prevents make dist / make distcheck from failing without python tools being present
if test ! -x ${top_builddir}/../python/commands/qpid-config; then
	path=`which qpid-config`
	if test $?; then
		echo "WARNING: qpid tools not found, skipping test ${CLUSTER_TEST}" 
		exit 0
	fi
fi


# Make sure temp dir exists if this is the first to use it
TMP_DATA_DIR=${TEST_DIR}/test_tmp
if ! test -d ${TMP_DATA_DIR} ; then
   	mkdir -p ${TMP_DATA_DIR}/cluster
else
    # Delete old cluster test dirs
    rm -rf ${TMP_DATA_DIR}/cluster
    mkdir -p ${TMP_DATA_DIR}/cluster
fi
export TMP_DATA_DIR


# Run the test
sg ais -c "${CLUSTER_TEST}"
RETCODE=$?

if test x${RETCODE} != x0; then 
    exit 1;
fi


# Delete cluster store dir if test was successful.
rm -rf ${TMP_DATA_DIR}

exit 0